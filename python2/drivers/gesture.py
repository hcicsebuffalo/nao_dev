
from naoqi import ALProxy
from base import *
import sys
import os
import csv

class gesture(base):
    
    def __init__(self, ip, port):
        base.__init__(self)
        self.ip = ip
        self.port = port
        self.proxy_name_motion = "ALMotion"
        self.proxy_name_robot_posture = "ALRobotPosture"
        
    def initmotion(self):
        self.motion = self.connect(self.proxy_name_motion , self.ip, self.port)
        self.posture = self.connect(self.proxy_name_robot_posture , self.ip, self.port)
        speak_motion = ALProxy("ALSpeakingMovement" , self.ip, self.port)
        speak_motion.setEnabled(True)

    def hello_movement(self):            
        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([0.8, 1.56, 2.24, 2.8, 3.48, 4.6])
        keys.append([[0.29602, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.170316, [3, -0.253333, 0.111996], [3, 0.226667, -0.100207]], [-0.340591, [3, -0.226667, 0], [3, 0.186667, 0]], [-0.0598679, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.193327, [3, -0.226667, 0], [3, 0.373333, 0]], [-0.01078, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("HeadYaw")
        times.append([0.8, 1.56, 2.24, 2.8, 3.48, 4.6])
        keys.append([[-0.135034, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.351328, [3, -0.253333, 0.0493864], [3, 0.226667, -0.0441878]], [-0.415757, [3, -0.226667, 0.00372364], [3, 0.186667, -0.00306653]], [-0.418823, [3, -0.186667, 0.00306653], [3, 0.226667, -0.00372364]], [-0.520068, [3, -0.226667, 0], [3, 0.373333, 0]], [-0.375872, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("LElbowRoll")
        times.append([0.72, 1.48, 2.16, 2.72, 3.4, 4.52])
        keys.append([[-1.37902, [3, -0.24, 0], [3, 0.253333, 0]], [-1.29005, [3, -0.253333, -0.0345436], [3, 0.226667, 0.0309074]], [-1.18267, [3, -0.226667, 0], [3, 0.186667, 0]], [-1.24863, [3, -0.186667, 0.0205524], [3, 0.226667, -0.0249565]], [-1.3192, [3, -0.226667, 0], [3, 0.373333, 0]], [-1.18421, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("LElbowYaw")
        times.append([0.72, 1.48, 2.16, 2.72, 3.4, 4.52])
        keys.append([[-0.803859, [3, -0.24, 0], [3, 0.253333, 0]], [-0.691876, [3, -0.253333, -0.0137171], [3, 0.226667, 0.0122732]], [-0.679603, [3, -0.226667, -0.0122732], [3, 0.186667, 0.0101073]], [-0.610574, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.753235, [3, -0.226667, 0], [3, 0.373333, 0]], [-0.6704, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("LHand")
        times.append([1.48, 4.52])
        keys.append([[0.238207, [3, -0.493333, 0], [3, 1.01333, 0]], [0.240025, [3, -1.01333, 0], [3, 0, 0]]])

        names.append("LShoulderPitch")
        times.append([0.72, 1.48, 2.16, 2.72, 3.4, 4.52])
        keys.append([[1.11824, [3, -0.24, 0], [3, 0.253333, 0]], [0.928028, [3, -0.253333, 0], [3, 0.226667, 0]], [0.9403, [3, -0.226667, 0], [3, 0.186667, 0]], [0.862065, [3, -0.186667, 0], [3, 0.226667, 0]], [0.897349, [3, -0.226667, 0], [3, 0.373333, 0]], [0.842125, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("LShoulderRoll")
        times.append([0.72, 1.48, 2.16, 2.72, 3.4, 4.52])
        keys.append([[0.363515, [3, -0.24, 0], [3, 0.253333, 0]], [0.226991, [3, -0.253333, 0.0257175], [3, 0.226667, -0.0230104]], [0.20398, [3, -0.226667, 0], [3, 0.186667, 0]], [0.217786, [3, -0.186667, -0.00669692], [3, 0.226667, 0.00813198]], [0.248467, [3, -0.226667, 0], [3, 0.373333, 0]], [0.226991, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("LWristYaw")
        times.append([1.48, 4.52])
        keys.append([[0.147222, [3, -0.493333, 0], [3, 1.01333, 0]], [0.11961, [3, -1.01333, 0], [3, 0, 0]]])

        names.append("RElbowRoll")
        times.append([0.64, 1.4, 1.68, 2.08, 2.4, 2.64, 3.04, 3.32, 3.72, 4.44])
        keys.append([[1.38524, [3, -0.213333, 0], [3, 0.253333, 0]], [0.242414, [3, -0.253333, 0], [3, 0.0933333, 0]], [0.349066, [3, -0.0933333, -0.0949577], [3, 0.133333, 0.135654]], [0.934249, [3, -0.133333, 0], [3, 0.106667, 0]], [0.680678, [3, -0.106667, 0.141383], [3, 0.08, -0.106037]], [0.191986, [3, -0.08, 0], [3, 0.133333, 0]], [0.261799, [3, -0.133333, -0.0698132], [3, 0.0933333, 0.0488692]], [0.707216, [3, -0.0933333, -0.103967], [3, 0.133333, 0.148524]], [1.01927, [3, -0.133333, -0.0664734], [3, 0.24, 0.119652]], [1.26559, [3, -0.24, 0], [3, 0, 0]]])

        names.append("RElbowYaw")
        times.append([0.64, 1.4, 2.08, 2.64, 3.32, 3.72, 4.44])
        keys.append([[-0.312978, [3, -0.213333, 0], [3, 0.253333, 0]], [0.564471, [3, -0.253333, 0], [3, 0.226667, 0]], [0.391128, [3, -0.226667, 0.0395378], [3, 0.186667, -0.0325606]], [0.348176, [3, -0.186667, 0], [3, 0.226667, 0]], [0.381923, [3, -0.226667, -0.0337477], [3, 0.133333, 0.0198516]], [0.977384, [3, -0.133333, 0], [3, 0.24, 0]], [0.826783, [3, -0.24, 0], [3, 0, 0]]])

        names.append("RHand")
        times.append([1.4, 3.32, 4.44])
        keys.append([[0.853478, [3, -0.466667, 0], [3, 0.64, 0]], [0.854933, [3, -0.64, 0], [3, 0.373333, 0]], [0.425116, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("RShoulderPitch")
        times.append([0.64, 1.4, 2.08, 2.64, 3.32, 4.44])
        keys.append([[0.247016, [3, -0.213333, 0], [3, 0.253333, 0]], [-1.17193, [3, -0.253333, 0], [3, 0.226667, 0]], [-1.0891, [3, -0.226667, 0], [3, 0.186667, 0]], [-1.26091, [3, -0.186667, 0], [3, 0.226667, 0]], [-1.14892, [3, -0.226667, -0.111982], [3, 0.373333, 0.184441]], [1.02015, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("RShoulderRoll")
        times.append([0.64, 1.4, 2.08, 2.64, 3.32, 4.44])
        keys.append([[-0.242414, [3, -0.213333, 0], [3, 0.253333, 0]], [-0.954191, [3, -0.253333, 0], [3, 0.226667, 0]], [-0.460242, [3, -0.226667, 0], [3, 0.186667, 0]], [-0.960325, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.328317, [3, -0.226667, -0.0474984], [3, 0.373333, 0.0782326]], [-0.250085, [3, -0.373333, 0], [3, 0, 0]]])

        names.append("RWristYaw")
        times.append([1.4, 3.32, 4.44])
        keys.append([[-0.312978, [3, -0.466667, 0], [3, 0.64, 0]], [-0.303775, [3, -0.64, -0.00920312], [3, 0.373333, 0.00536849]], [0.182504, [3, -0.373333, 0], [3, 0, 0]]])

        try:        
            self.motion.angleInterpolationBezier(names, times, keys)
        except :
            print ("Error Executing Hello Motion")

        self.motion.waitUntilMoveIsFinished()
        #self.motion.rest()

    def dance_nao(self):
        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([0.5, 1, 1.2, 1.5, 1.8, 2.1, 2.6, 3, 3.2, 3.5, 3.8, 4.1, 4.6, 5, 5.2, 5.5, 5.8, 6.1, 6.6, 7, 7.2, 7.5, 7.8, 8.1, 8.6, 10])
        keys.append([[-0.0046272, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.185656, [3, -0.166667, 0], [3, 0.0666667, 0]], [0.0291041, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0], [3, 0.1, 0]], [0.00149202, [3, -0.1, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0.044486], [3, 0.166667, -0.0741434]], [-0.354396, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185656, [3, -0.133333, -0.0852223], [3, 0.0666667, 0.0426111]], [0.0291041, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0], [3, 0.1, 0]], [0.00149202, [3, -0.1, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0.044486], [3, 0.166667, -0.0741434]], [-0.354396, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185656, [3, -0.133333, -0.0852223], [3, 0.0666667, 0.0426111]], [0.0291041, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0], [3, 0.1, 0]], [0.00149202, [3, -0.1, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0.044486], [3, 0.166667, -0.0741434]], [-0.354396, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185656, [3, -0.133333, -0.0852223], [3, 0.0666667, 0.0426111]], [0.0291041, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0], [3, 0.1, 0]], [0.00149202, [3, -0.1, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0.044486], [3, 0.166667, -0.0741434]], [-0.354396, [3, -0.166667, 0], [3, 0.466667, 0]], [-0.00261907, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("HeadYaw")
        times.append([0.5, 1, 1.2, 1.5, 1.8, 2.1, 2.6, 3, 3.2, 3.5, 3.8, 4.1, 4.6, 5, 5.2, 5.5, 5.8, 6.1, 6.6, 7, 7.2, 7.5, 7.8, 8.1, 8.6, 10])
        keys.append([[-0.00354174, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.00157595, [3, -0.166667, 0], [3, 0.0666667, 0]], [-0.00157595, [3, -0.0666667, 0], [3, 0.1, 0]], [0.00609397, [3, -0.1, 0], [3, 0.1, 0]], [-4.19617e-05, [3, -0.1, 0], [3, 0.1, 0]], [0.00609397, [3, -0.1, -0.00613594], [3, 0.166667, 0.0102266]], [0.431013, [3, -0.166667, 0], [3, 0.133333, 0]], [0.00157595, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.00157595, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.00609397, [3, -0.1, 0], [3, 0.1, 0]], [4.19617e-05, [3, -0.1, 0], [3, 0.1, 0]], [-0.00609397, [3, -0.1, 0.00613594], [3, 0.166667, -0.0102266]], [-0.431013, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.00157595, [3, -0.133333, 0], [3, 0.0666667, 0]], [-0.00157595, [3, -0.0666667, 0], [3, 0.1, 0]], [0.00609397, [3, -0.1, 0], [3, 0.1, 0]], [-4.19617e-05, [3, -0.1, 0], [3, 0.1, 0]], [0.00609397, [3, -0.1, -0.00613594], [3, 0.166667, 0.0102266]], [0.431013, [3, -0.166667, 0], [3, 0.133333, 0]], [0.00157595, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.00157595, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.00609397, [3, -0.1, 0], [3, 0.1, 0]], [4.19617e-05, [3, -0.1, 0], [3, 0.1, 0]], [-0.00609397, [3, -0.1, 0.00613594], [3, 0.166667, -0.0102266]], [-0.431013, [3, -0.166667, 0], [3, 0.466667, 0]], [-0.0041901, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LAnklePitch")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[-0.35, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.417291, [3, -0.166667, 0.0357647], [3, 0.233333, -0.0500706]], [-0.607505, [3, -0.233333, 0.0371355], [3, 0.3, -0.0477457]], [-0.671934, [3, -0.3, 0], [3, 0.133333, 0]], [-0.31136, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.443284, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.417291, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.607505, [3, -0.233333, 0.0371355], [3, 0.3, -0.0477457]], [-0.671934, [3, -0.3, 0], [3, 0.133333, 0]], [-0.31136, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.443284, [3, -0.533333, 0], [3, 0.466667, 0]], [-0.344847, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LAnkleRoll")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[-0.00902358, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.0858622, [3, -0.166667, 0.0162115], [3, 0.233333, -0.022696]], [-0.125746, [3, -0.233333, 0], [3, 0.3, 0]], [-0.105804, [3, -0.3, 0], [3, 0.133333, 0]], [-0.124296, [3, -0.133333, 0.0139139], [3, 0.533333, -0.0556554]], [-0.314512, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.0858622, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.125746, [3, -0.233333, 0], [3, 0.3, 0]], [-0.105804, [3, -0.3, 0], [3, 0.133333, 0]], [-0.124296, [3, -0.133333, 0.0139139], [3, 0.533333, -0.0556554]], [-0.314512, [3, -0.533333, 0], [3, 0.466667, 0]], [-0.00744537, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LElbowRoll")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[-1.00398, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.24863, [3, -0.166667, 0], [3, 0.0333333, 0]], [-1.07529, [3, -0.0333333, -0.0429523], [3, 0.0333333, 0.0429523]], [-0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.4005, [3, -0.0333333, 0.0922825], [3, 0.0333333, -0.0922825]], [-1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.39897, [3, -0.0333333, -0.0493303], [3, 0.0333333, 0.0493303]], [-1.24863, [3, -0.0333333, -0.0453384], [3, 0.0666667, 0.0906768]], [-0.990921, [3, -0.0666667, 0], [3, 0.0333333, 0]], [-1.4005, [3, -0.0333333, 0.0922825], [3, 0.0333333, -0.0922825]], [-1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.39897, [3, -0.0333333, -0.0285789], [3, 0.166667, 0.142894]], [-1.0302, [3, -0.166667, 0], [3, 0.133333, 0]], [-1.33309, [3, -0.133333, 0.0552222], [3, 0.0333333, -0.0138056]], [-1.34689, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.31468, [3, -0.0333333, -0.0999658], [3, 0.0333333, 0.0999658]], [-0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.16281, [3, -0.0333333, 0.083603], [3, 0.0333333, -0.083603]], [-1.33309, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.34689, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.31468, [3, -0.0333333, -0.0999658], [3, 0.0333333, 0.0999658]], [-0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.16281, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.929527, [3, -0.166667, 0], [3, 0.133333, 0]], [-1.24863, [3, -0.133333, 0], [3, 0.0333333, 0]], [-1.07529, [3, -0.0333333, -0.0429523], [3, 0.0333333, 0.0429523]], [-0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.4005, [3, -0.0333333, 0.0922825], [3, 0.0333333, -0.0922825]], [-1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.39897, [3, -0.0333333, -0.0493303], [3, 0.0333333, 0.0493303]], [-1.24863, [3, -0.0333333, -0.0453384], [3, 0.0666667, 0.0906768]], [-0.990921, [3, -0.0666667, 0], [3, 0.0333333, 0]], [-1.4005, [3, -0.0333333, 0.0922825], [3, 0.0333333, -0.0922825]], [-1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.39897, [3, -0.0333333, -0.0285789], [3, 0.166667, 0.142894]], [-1.0302, [3, -0.166667, 0], [3, 0.133333, 0]], [-1.33309, [3, -0.133333, 0.0552222], [3, 0.0333333, -0.0138056]], [-1.34689, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.31468, [3, -0.0333333, -0.0999658], [3, 0.0333333, 0.0999658]], [-0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.16281, [3, -0.0333333, 0.083603], [3, 0.0333333, -0.083603]], [-1.33309, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.34689, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.31468, [3, -0.0333333, -0.0999658], [3, 0.0333333, 0.0999658]], [-0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.16281, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.929527, [3, -0.166667, 0], [3, 0.466667, 0]], [-1.00802, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LElbowYaw")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[-1.38417, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.434165, [3, -0.166667, -0.296275], [3, 0.0333333, 0.059255]], [-0.31758, [3, -0.0333333, -0.0449974], [3, 0.0333333, 0.0449974]], [-0.16418, [3, -0.0333333, -0.0631497], [3, 0.0333333, 0.0631497]], [0.061318, [3, -0.0333333, -0.0590701], [3, 0.0333333, 0.0590701]], [0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176453, [3, -0.0333333, 0.104068], [3, 0.0333333, -0.104068]], [-0.434165, [3, -0.0333333, 0], [3, 0.0666667, 0]], [-0.165714, [3, -0.0666667, -0.110107], [3, 0.0333333, 0.0550536]], [0.061318, [3, -0.0333333, -0.0593258], [3, 0.0333333, 0.0593258]], [0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176453, [3, -0.0333333, 0.107026], [3, 0.166667, -0.535128]], [-1.73622, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185572, [3, -0.133333, -0.165672], [3, 0.0333333, 0.041418]], [-0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.174835, [3, -0.0333333, 0.0306808], [3, 0.0333333, -0.0306808]], [-0.351244, [3, -0.0333333, 0.0452529], [3, 0.0333333, -0.0452529]], [-0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.036858, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.185572, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176367, [3, -0.0333333, 0.0322132], [3, 0.0333333, -0.0322132]], [-0.351244, [3, -0.0333333, 0.0449975], [3, 0.0333333, -0.0449975]], [-0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.036858, [3, -0.0333333, -0.0457293], [3, 0.166667, 0.228646]], [0.376775, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.434165, [3, -0.133333, 0], [3, 0.0333333, 0]], [-0.31758, [3, -0.0333333, -0.0449974], [3, 0.0333333, 0.0449974]], [-0.16418, [3, -0.0333333, -0.0631497], [3, 0.0333333, 0.0631497]], [0.061318, [3, -0.0333333, -0.0590701], [3, 0.0333333, 0.0590701]], [0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176453, [3, -0.0333333, 0.104068], [3, 0.0333333, -0.104068]], [-0.434165, [3, -0.0333333, 0], [3, 0.0666667, 0]], [-0.165714, [3, -0.0666667, -0.110107], [3, 0.0333333, 0.0550536]], [0.061318, [3, -0.0333333, -0.0593258], [3, 0.0333333, 0.0593258]], [0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176453, [3, -0.0333333, 0.107026], [3, 0.166667, -0.535128]], [-1.73622, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185572, [3, -0.133333, -0.165672], [3, 0.0333333, 0.041418]], [-0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.174835, [3, -0.0333333, 0.0306808], [3, 0.0333333, -0.0306808]], [-0.351244, [3, -0.0333333, 0.0452529], [3, 0.0333333, -0.0452529]], [-0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.036858, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.185572, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176367, [3, -0.0333333, 0.0322132], [3, 0.0333333, -0.0322132]], [-0.351244, [3, -0.0333333, 0.0449975], [3, 0.0333333, -0.0449975]], [-0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.036858, [3, -0.0333333, -0.0457293], [3, 0.166667, 0.228646]], [0.376775, [3, -0.166667, 0], [3, 0.466667, 0]], [-1.38515, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LHand")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[0.251572, [3, -0.166667, 0], [3, 0.166667, 0]], [0, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.188, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, -0.0554293], [3, 0.166667, 0.277147]], [0.997728, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0.000399992], [3, 0.0333333, -0.000399992]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0], [3, 0.166667, 0]], [1, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.188, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, -0.0554293], [3, 0.166667, 0.277147]], [0.997728, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0.000399992], [3, 0.0333333, -0.000399992]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0], [3, 0.166667, 0]], [1, [3, -0.166667, 0], [3, 0.466667, 0]], [0.259178, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LHipPitch")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[-0.45, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.052114, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.33437, [3, -0.233333, 0.0516766], [3, 0.3, -0.0664414]], [-0.406468, [3, -0.3, 0], [3, 0.133333, 0]], [-0.0767419, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.104354, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.052114, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.33437, [3, -0.233333, 0.0516766], [3, 0.3, -0.0664414]], [-0.406468, [3, -0.3, 0], [3, 0.133333, 0]], [-0.0767419, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.104354, [3, -0.533333, 0.027612], [3, 0.466667, -0.0241605]], [-0.443326, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LHipRoll")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[0.00159365, [3, -0.166667, 0], [3, 0.166667, 0]], [0.1335, [3, -0.166667, -0.0240729], [3, 0.233333, 0.0337021]], [0.174919, [3, -0.233333, -0.0208048], [3, 0.3, 0.0267491]], [0.276162, [3, -0.3, 0], [3, 0.133333, 0]], [0.128814, [3, -0.133333, 0], [3, 0.533333, 0]], [0.208583, [3, -0.533333, 0], [3, 0.133333, 0]], [0.1335, [3, -0.133333, 0], [3, 0.233333, 0]], [0.174919, [3, -0.233333, -0.0208048], [3, 0.3, 0.0267491]], [0.276162, [3, -0.3, 0], [3, 0.133333, 0]], [0.128814, [3, -0.133333, 0], [3, 0.533333, 0]], [0.208583, [3, -0.533333, 0], [3, 0.466667, 0]], [0.00755153, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LHipYawPitch")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[-0.00420801, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.36505, [3, -0.166667, 0.00986112], [3, 0.233333, -0.0138056]], [-0.378855, [3, -0.233333, 0], [3, 0.3, 0]], [-0.371186, [3, -0.3, -0.0031859], [3, 0.133333, 0.00141596]], [-0.36505, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.371186, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.36505, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.378855, [3, -0.233333, 0], [3, 0.3, 0]], [-0.371186, [3, -0.3, -0.0031859], [3, 0.133333, 0.00141596]], [-0.36505, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.371186, [3, -0.533333, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LKneePitch")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[0.699999, [3, -0.166667, 0], [3, 0.166667, 0]], [0.731677, [3, -0.166667, -0.0316778], [3, 0.233333, 0.0443489]], [1.13358, [3, -0.233333, -0.0829957], [3, 0.3, 0.106709]], [1.30079, [3, -0.3, 0], [3, 0.133333, 0]], [0.653526, [3, -0.133333, 0], [3, 0.533333, 0]], [0.856014, [3, -0.533333, 0], [3, 0.133333, 0]], [0.731677, [3, -0.133333, 0], [3, 0.233333, 0]], [1.13358, [3, -0.233333, -0.0829957], [3, 0.3, 0.106709]], [1.30079, [3, -0.3, 0], [3, 0.133333, 0]], [0.653526, [3, -0.133333, 0], [3, 0.533333, 0]], [0.856014, [3, -0.533333, 0], [3, 0.466667, 0]], [0.691105, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LShoulderPitch")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[1.40432, [3, -0.166667, 0], [3, 0.166667, 0]], [0.357381, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, -0.0426919], [3, 0.0333333, 0.0426919]], [0.357381, [3, -0.0333333, -0.0335774], [3, 0.0666667, 0.0671548]], [0.584411, [3, -0.0666667, -0.0429527], [3, 0.0333333, 0.0214763]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.583692, [3, -0.166667, 0], [3, 0.133333, 0]], [0.624379, [3, -0.133333, -0.35406], [3, 0.0333333, 0.088515]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.624379, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.708379, [3, -0.166667, 0.0172456], [3, 0.133333, -0.0137965]], [0.357381, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, -0.0426919], [3, 0.0333333, 0.0426919]], [0.357381, [3, -0.0333333, -0.0335774], [3, 0.0666667, 0.0671548]], [0.584411, [3, -0.0666667, -0.0429527], [3, 0.0333333, 0.0214763]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.583692, [3, -0.166667, 0], [3, 0.133333, 0]], [0.624379, [3, -0.133333, -0.35406], [3, 0.0333333, 0.088515]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.624379, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.708379, [3, -0.166667, 0], [3, 0.466667, 0]], [1.40104, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LShoulderRoll")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[0.293252, [3, -0.166667, 0], [3, 0.166667, 0]], [0.159494, [3, -0.166667, 0.0422683], [3, 0.0333333, -0.00845366]], [0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0889301, [3, -0.0333333, 0.0404302], [3, 0.0333333, -0.0404302]], [-0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.066004, [3, -0.0333333, -0.0247531], [3, 0.0333333, 0.0247531]], [0.159494, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.151824, [3, -0.0666667, 0.00767004], [3, 0.0333333, -0.00383502]], [0.0889301, [3, -0.0333333, 0.0404302], [3, 0.0333333, -0.0404302]], [-0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.066004, [3, -0.0333333, -0.0247531], [3, 0.166667, 0.123766]], [0.536495, [3, -0.166667, 0], [3, 0.133333, 0]], [0.0337899, [3, -0.133333, 0.186824], [3, 0.0333333, -0.0467061]], [-0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0843279, [3, -0.0333333, -0.0217316], [3, 0.0333333, 0.0217316]], [-0.052114, [3, -0.0333333, -0.0196863], [3, 0.0333333, 0.0196863]], [0.0337899, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0843279, [3, -0.0333333, -0.0217316], [3, 0.0333333, 0.0217316]], [-0.052114, [3, -0.0333333, -0.0157946], [3, 0.166667, 0.0789729]], [0.199975, [3, -0.166667, 0], [3, 0.133333, 0]], [0.159494, [3, -0.133333, 0.0157036], [3, 0.0333333, -0.0039259]], [0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0889301, [3, -0.0333333, 0.0404302], [3, 0.0333333, -0.0404302]], [-0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.066004, [3, -0.0333333, -0.0247531], [3, 0.0333333, 0.0247531]], [0.159494, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.151824, [3, -0.0666667, 0.00767004], [3, 0.0333333, -0.00383502]], [0.0889301, [3, -0.0333333, 0.0404302], [3, 0.0333333, -0.0404302]], [-0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.066004, [3, -0.0333333, -0.0247531], [3, 0.166667, 0.123766]], [0.536495, [3, -0.166667, 0], [3, 0.133333, 0]], [0.0337899, [3, -0.133333, 0.186824], [3, 0.0333333, -0.0467061]], [-0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0843279, [3, -0.0333333, -0.0217316], [3, 0.0333333, 0.0217316]], [-0.052114, [3, -0.0333333, -0.0196863], [3, 0.0333333, 0.0196863]], [0.0337899, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0843279, [3, -0.0333333, -0.0217316], [3, 0.0333333, 0.0217316]], [-0.052114, [3, -0.0333333, -0.0157946], [3, 0.166667, 0.0789729]], [0.199975, [3, -0.166667, -0.030547], [3, 0.466667, 0.0855317]], [0.296122, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("LWristYaw")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[-0.0064736, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.573758, [3, -0.166667, 0.169084], [3, 0.0333333, -0.0338168]], [-0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.412688, [3, -0.0333333, -0.0700526], [3, 0.0333333, 0.0700526]], [-0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.763974, [3, -0.0333333, -0.0646531], [3, 0.0333333, 0.0646531]], [-0.573758, [3, -0.0333333, -0.0390318], [3, 0.0666667, 0.0780635]], [-0.412688, [3, -0.0666667, -0.0841993], [3, 0.0333333, 0.0420997]], [-0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.763974, [3, -0.0333333, -0.122614], [3, 0.166667, 0.613071]], [1.24538, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.421808, [3, -0.133333, 0], [3, 0.0333333, 0]], [-0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.46476, [3, -0.0333333, 0.0127834], [3, 0.0333333, -0.0127834]], [-0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.472429, [3, -0.0333333, -0.0138073], [3, 0.0333333, 0.0138073]], [-0.131882, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.421808, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.46476, [3, -0.0333333, 0.0127834], [3, 0.0333333, -0.0127834]], [-0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.472429, [3, -0.0333333, -0.0138073], [3, 0.0333333, 0.0138073]], [-0.131882, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.574861, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.573758, [3, -0.133333, 0], [3, 0.0333333, 0]], [-0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.412688, [3, -0.0333333, -0.0700526], [3, 0.0333333, 0.0700526]], [-0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.763974, [3, -0.0333333, -0.0646531], [3, 0.0333333, 0.0646531]], [-0.573758, [3, -0.0333333, -0.0390318], [3, 0.0666667, 0.0780635]], [-0.412688, [3, -0.0666667, -0.0841993], [3, 0.0333333, 0.0420997]], [-0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.763974, [3, -0.0333333, -0.122614], [3, 0.166667, 0.613071]], [1.24538, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.421808, [3, -0.133333, 0], [3, 0.0333333, 0]], [-0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.46476, [3, -0.0333333, 0.0127834], [3, 0.0333333, -0.0127834]], [-0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.472429, [3, -0.0333333, -0.0138073], [3, 0.0333333, 0.0138073]], [-0.131882, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.421808, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.46476, [3, -0.0333333, 0.0127834], [3, 0.0333333, -0.0127834]], [-0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.472429, [3, -0.0333333, -0.0138073], [3, 0.0333333, 0.0138073]], [-0.131882, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.574861, [3, -0.166667, 0], [3, 0.466667, 0]], [0.00759608, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RAnklePitch")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[-0.35, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.31136, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.355846, [3, -0.233333, 0.0192389], [3, 0.3, -0.0247358]], [-0.443284, [3, -0.3, 0], [3, 0.133333, 0]], [-0.417291, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.671934, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.31136, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.355846, [3, -0.233333, 0.0192389], [3, 0.3, -0.0247358]], [-0.443284, [3, -0.3, 0], [3, 0.133333, 0]], [-0.417291, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.671934, [3, -0.533333, 0], [3, 0.466667, 0]], [-0.34488, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RAnkleRoll")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[0.00303459, [3, -0.166667, 0], [3, 0.166667, 0]], [0.124296, [3, -0.166667, -0.0142444], [3, 0.233333, 0.0199421]], [0.144238, [3, -0.233333, -0.0199421], [3, 0.3, 0.0256399]], [0.314512, [3, -0.3, 0], [3, 0.133333, 0]], [0.0858622, [3, -0.133333, 0], [3, 0.533333, 0]], [0.105804, [3, -0.533333, -0.010249], [3, 0.133333, 0.00256225]], [0.124296, [3, -0.133333, -0.00465867], [3, 0.233333, 0.00815268]], [0.144238, [3, -0.233333, -0.0199421], [3, 0.3, 0.0256399]], [0.314512, [3, -0.3, 0], [3, 0.133333, 0]], [0.0858622, [3, -0.133333, 0], [3, 0.533333, 0]], [0.105804, [3, -0.533333, 0], [3, 0.466667, 0]], [0.000827394, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RElbowRoll")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[1.00348, [3, -0.166667, 0], [3, 0.166667, 0]], [1.33309, [3, -0.166667, -0.0690278], [3, 0.0333333, 0.0138056]], [1.34689, [3, -0.0333333, -0.0138056], [3, 0.0333333, 0.0138056]], [1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.31468, [3, -0.0333333, 0.0999658], [3, 0.0333333, -0.0999658]], [0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.16281, [3, -0.0333333, -0.083603], [3, 0.0333333, 0.083603]], [1.33309, [3, -0.0333333, -0.0298279], [3, 0.0666667, 0.0596558]], [1.43126, [3, -0.0666667, 0], [3, 0.0333333, 0]], [1.31468, [3, -0.0333333, 0.0999658], [3, 0.0333333, -0.0999658]], [0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.16281, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.9362, [3, -0.166667, 0], [3, 0.133333, 0]], [1.24863, [3, -0.133333, 0], [3, 0.0333333, 0]], [1.07529, [3, -0.0333333, 0.0429523], [3, 0.0333333, -0.0429523]], [0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.4005, [3, -0.0333333, -0.0922825], [3, 0.0333333, 0.0922825]], [1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.39897, [3, -0.0333333, 0.0493303], [3, 0.0333333, -0.0493303]], [1.24863, [3, -0.0333333, 0.0539458], [3, 0.0333333, -0.0539458]], [1.07529, [3, -0.0333333, 0.0429523], [3, 0.0333333, -0.0429523]], [0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.4005, [3, -0.0333333, -0.0922825], [3, 0.0333333, 0.0922825]], [1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.39897, [3, -0.0333333, 0.0562086], [3, 0.166667, -0.281043]], [0.532861, [3, -0.166667, 0], [3, 0.133333, 0]], [1.33309, [3, -0.133333, -0.0552222], [3, 0.0333333, 0.0138056]], [1.34689, [3, -0.0333333, -0.0138056], [3, 0.0333333, 0.0138056]], [1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.31468, [3, -0.0333333, 0.0999658], [3, 0.0333333, -0.0999658]], [0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.16281, [3, -0.0333333, -0.083603], [3, 0.0333333, 0.083603]], [1.33309, [3, -0.0333333, -0.0298279], [3, 0.0666667, 0.0596558]], [1.43126, [3, -0.0666667, 0], [3, 0.0333333, 0]], [1.31468, [3, -0.0333333, 0.0999658], [3, 0.0333333, -0.0999658]], [0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.16281, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.9362, [3, -0.166667, 0], [3, 0.133333, 0]], [1.24863, [3, -0.133333, 0], [3, 0.0333333, 0]], [1.07529, [3, -0.0333333, 0.0429523], [3, 0.0333333, -0.0429523]], [0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.4005, [3, -0.0333333, -0.0922825], [3, 0.0333333, 0.0922825]], [1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.39897, [3, -0.0333333, 0.0493303], [3, 0.0333333, -0.0493303]], [1.24863, [3, -0.0333333, 0.0539458], [3, 0.0333333, -0.0539458]], [1.07529, [3, -0.0333333, 0.0429523], [3, 0.0333333, -0.0429523]], [0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.4005, [3, -0.0333333, -0.0922825], [3, 0.0333333, 0.0922825]], [1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.39897, [3, -0.0333333, 0.0562086], [3, 0.166667, -0.281043]], [0.532861, [3, -0.166667, 0], [3, 0.466667, 0]], [1.00797, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RElbowYaw")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[1.38479, [3, -0.166667, 0], [3, 0.166667, 0]], [0.185572, [3, -0.166667, 0.20709], [3, 0.0333333, -0.041418]], [0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.174835, [3, -0.0333333, -0.0306808], [3, 0.0333333, 0.0306808]], [0.351244, [3, -0.0333333, -0.0452529], [3, 0.0333333, 0.0452529]], [0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.036858, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.185572, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.176367, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.351244, [3, -0.0333333, -0.0449975], [3, 0.0333333, 0.0449975]], [0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.036858, [3, -0.0333333, 0.0459114], [3, 0.166667, -0.229557]], [-0.380052, [3, -0.166667, 0], [3, 0.133333, 0]], [0.434165, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.31758, [3, -0.0333333, 0.0449974], [3, 0.0333333, -0.0449974]], [0.16418, [3, -0.0333333, 0.0631497], [3, 0.0333333, -0.0631497]], [-0.061318, [3, -0.0333333, 0.0590701], [3, 0.0333333, -0.0590701]], [-0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.176453, [3, -0.0333333, -0.104068], [3, 0.0333333, 0.104068]], [0.434165, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.31758, [3, -0.0333333, 0.0447418], [3, 0.0333333, -0.0447418]], [0.165714, [3, -0.0333333, 0.0631497], [3, 0.0333333, -0.0631497]], [-0.061318, [3, -0.0333333, 0.0593258], [3, 0.0333333, -0.0593258]], [-0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.176453, [3, -0.0333333, -0.108634], [3, 0.166667, 0.543171]], [1.76517, [3, -0.166667, 0], [3, 0.133333, 0]], [0.185572, [3, -0.133333, 0.165672], [3, 0.0333333, -0.041418]], [0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.174835, [3, -0.0333333, -0.0306808], [3, 0.0333333, 0.0306808]], [0.351244, [3, -0.0333333, -0.0452529], [3, 0.0333333, 0.0452529]], [0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.036858, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.185572, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.176367, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.351244, [3, -0.0333333, -0.0449975], [3, 0.0333333, 0.0449975]], [0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.036858, [3, -0.0333333, 0.0459114], [3, 0.166667, -0.229557]], [-0.380052, [3, -0.166667, 0], [3, 0.133333, 0]], [0.434165, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.31758, [3, -0.0333333, 0.0449974], [3, 0.0333333, -0.0449974]], [0.16418, [3, -0.0333333, 0.0631497], [3, 0.0333333, -0.0631497]], [-0.061318, [3, -0.0333333, 0.0590701], [3, 0.0333333, -0.0590701]], [-0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.176453, [3, -0.0333333, -0.104068], [3, 0.0333333, 0.104068]], [0.434165, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.31758, [3, -0.0333333, 0.0447418], [3, 0.0333333, -0.0447418]], [0.165714, [3, -0.0333333, 0.0631497], [3, 0.0333333, -0.0631497]], [-0.061318, [3, -0.0333333, 0.0593258], [3, 0.0333333, -0.0593258]], [-0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.176453, [3, -0.0333333, -0.108634], [3, 0.166667, 0.543171]], [1.76517, [3, -0.166667, 0], [3, 0.466667, 0]], [1.38466, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RHand")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[0.251513, [3, -0.166667, 0], [3, 0.166667, 0]], [0, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0.000399992], [3, 0.0333333, -0.000399992]], [0, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.178, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.996256, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, -0.0555556], [3, 0.166667, 0.277778]], [1, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0.000399992], [3, 0.0333333, -0.000399992]], [0, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.178, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.996256, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, -0.0555556], [3, 0.166667, 0.277778]], [1, [3, -0.166667, 0], [3, 0.466667, 0]], [0.25, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RHipPitch")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[-0.45, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.0767419, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.44797, [3, -0.233333, 0], [3, 0.3, 0]], [-0.104354, [3, -0.3, -0.0913514], [3, 0.133333, 0.0406006]], [-0.052114, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.406468, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.0767419, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.44797, [3, -0.233333, 0], [3, 0.3, 0]], [-0.104354, [3, -0.3, -0.0913514], [3, 0.133333, 0.0406006]], [-0.052114, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.406468, [3, -0.533333, 0.0422234], [3, 0.466667, -0.0369455]], [-0.443413, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RHipRoll")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[-0.00288084, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.128814, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.108872, [3, -0.233333, 0], [3, 0.3, 0]], [-0.208583, [3, -0.3, 0], [3, 0.133333, 0]], [-0.1335, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.276162, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.128814, [3, -0.133333, -0.0113955], [3, 0.233333, 0.0199421]], [-0.108872, [3, -0.233333, 0], [3, 0.3, 0]], [-0.208583, [3, -0.3, 0], [3, 0.133333, 0]], [-0.1335, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.276162, [3, -0.533333, 0], [3, 0.466667, 0]], [-0.000705859, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RHipYawPitch")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[-0.00420801, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.36505, [3, -0.166667, 0.00986112], [3, 0.233333, -0.0138056]], [-0.378855, [3, -0.233333, 0], [3, 0.3, 0]], [-0.371186, [3, -0.3, -0.0031859], [3, 0.133333, 0.00141596]], [-0.36505, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.371186, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.36505, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.378855, [3, -0.233333, 0], [3, 0.3, 0]], [-0.371186, [3, -0.3, -0.0031859], [3, 0.133333, 0.00141596]], [-0.36505, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.371186, [3, -0.533333, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RKneePitch")
        times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
        keys.append([[0.699999, [3, -0.166667, 0], [3, 0.166667, 0]], [0.653526, [3, -0.166667, 0], [3, 0.233333, 0]], [1.00481, [3, -0.233333, 0], [3, 0.3, 0]], [0.856014, [3, -0.3, 0.0630312], [3, 0.133333, -0.0280139]], [0.731677, [3, -0.133333, 0], [3, 0.533333, 0]], [1.30079, [3, -0.533333, 0], [3, 0.133333, 0]], [0.653526, [3, -0.133333, 0], [3, 0.233333, 0]], [1.00481, [3, -0.233333, 0], [3, 0.3, 0]], [0.856014, [3, -0.3, 0.0630312], [3, 0.133333, -0.0280139]], [0.731677, [3, -0.133333, 0], [3, 0.533333, 0]], [1.30079, [3, -0.533333, 0], [3, 0.466667, 0]], [0.691105, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RShoulderPitch")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[1.40843, [3, -0.166667, 0], [3, 0.166667, 0]], [0.624379, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.624379, [3, -0.0333333, 0.0238621], [3, 0.0666667, -0.0477243]], [0.510865, [3, -0.0666667, 0.0698822], [3, 0.0333333, -0.0349411]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.705232, [3, -0.166667, 0.0203924], [3, 0.133333, -0.0163139]], [0.357381, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, -0.0426919], [3, 0.0333333, 0.0426919]], [0.357381, [3, -0.0333333, -0.0380941], [3, 0.0333333, 0.0380941]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.578744, [3, -0.166667, 0], [3, 0.133333, 0]], [0.624379, [3, -0.133333, -0.35274], [3, 0.0333333, 0.0881851]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.624379, [3, -0.0333333, 0.0238621], [3, 0.0666667, -0.0477243]], [0.510865, [3, -0.0666667, 0.0698822], [3, 0.0333333, -0.0349411]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.705232, [3, -0.166667, 0.0203924], [3, 0.133333, -0.0163139]], [0.357381, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, -0.0426919], [3, 0.0333333, 0.0426919]], [0.357381, [3, -0.0333333, -0.0380941], [3, 0.0333333, 0.0380941]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.578744, [3, -0.166667, 0], [3, 0.466667, 0]], [1.40094, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RShoulderRoll")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[-0.297629, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.0337899, [3, -0.166667, -0.128257], [3, 0.0333333, 0.0256514]], [0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0843279, [3, -0.0333333, 0.0217316], [3, 0.0333333, -0.0217316]], [0.052114, [3, -0.0333333, 0.0196863], [3, 0.0333333, -0.0196863]], [-0.0337899, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.124212, [3, -0.0666667, -0.0480653], [3, 0.0333333, 0.0240326]], [0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0843279, [3, -0.0333333, 0.0217316], [3, 0.0333333, -0.0217316]], [0.052114, [3, -0.0333333, 0.015521], [3, 0.166667, -0.0776052]], [-0.195051, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.159494, [3, -0.133333, -0.0143906], [3, 0.0333333, 0.00359766]], [-0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0889301, [3, -0.0333333, -0.0404302], [3, 0.0333333, 0.0404302]], [0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.066004, [3, -0.0333333, 0.0247531], [3, 0.0333333, -0.0247531]], [-0.159494, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0889301, [3, -0.0333333, -0.0404302], [3, 0.0333333, 0.0404302]], [0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.066004, [3, -0.0333333, 0.0205304], [3, 0.166667, -0.102652]], [-0.27879, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.0337899, [3, -0.133333, -0.118103], [3, 0.0333333, 0.0295257]], [0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0843279, [3, -0.0333333, 0.0217316], [3, 0.0333333, -0.0217316]], [0.052114, [3, -0.0333333, 0.0196863], [3, 0.0333333, -0.0196863]], [-0.0337899, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.124212, [3, -0.0666667, -0.0480653], [3, 0.0333333, 0.0240326]], [0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0843279, [3, -0.0333333, 0.0217316], [3, 0.0333333, -0.0217316]], [0.052114, [3, -0.0333333, 0.015521], [3, 0.166667, -0.0776052]], [-0.195051, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.159494, [3, -0.133333, -0.0143906], [3, 0.0333333, 0.00359766]], [-0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0889301, [3, -0.0333333, -0.0404302], [3, 0.0333333, 0.0404302]], [0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.066004, [3, -0.0333333, 0.0247531], [3, 0.0333333, -0.0247531]], [-0.159494, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0889301, [3, -0.0333333, -0.0404302], [3, 0.0333333, 0.0404302]], [0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.066004, [3, -0.0333333, 0.0205304], [3, 0.166667, -0.102652]], [-0.27879, [3, -0.166667, 0.00570368], [3, 0.466667, -0.0159703]], [-0.29476, [3, -0.466667, 0], [3, 0, 0]]])

        names.append("RWristYaw")
        times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
        keys.append([[-0.00104124, [3, -0.166667, 0], [3, 0.166667, 0]], [0.421808, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.46476, [3, -0.0333333, -0.0127834], [3, 0.0333333, 0.0127834]], [0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.472429, [3, -0.0333333, 0.0138073], [3, 0.0333333, -0.0138073]], [0.131882, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.421808, [3, -0.0333333, -0.0214763], [3, 0.0666667, 0.0429525]], [0.46476, [3, -0.0666667, -0.0143175], [3, 0.0333333, 0.00715876]], [0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.472429, [3, -0.0333333, 0.0138073], [3, 0.0333333, -0.0138073]], [0.131882, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.578728, [3, -0.166667, 0], [3, 0.133333, 0]], [0.573758, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.412688, [3, -0.0333333, 0.0700526], [3, 0.0333333, -0.0700526]], [0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.763974, [3, -0.0333333, 0.0646531], [3, 0.0333333, -0.0646531]], [0.573758, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.412688, [3, -0.0333333, 0.0700526], [3, 0.0333333, -0.0700526]], [0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.763974, [3, -0.0333333, 0.088914], [3, 0.166667, -0.44457]], [-0.638775, [3, -0.166667, 0], [3, 0.133333, 0]], [0.421808, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.46476, [3, -0.0333333, -0.0127834], [3, 0.0333333, 0.0127834]], [0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.472429, [3, -0.0333333, 0.0138073], [3, 0.0333333, -0.0138073]], [0.131882, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.421808, [3, -0.0333333, -0.0214763], [3, 0.0666667, 0.0429525]], [0.46476, [3, -0.0666667, -0.0143175], [3, 0.0333333, 0.00715876]], [0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.472429, [3, -0.0333333, 0.0138073], [3, 0.0333333, -0.0138073]], [0.131882, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.578728, [3, -0.166667, 0], [3, 0.133333, 0]], [0.573758, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.412688, [3, -0.0333333, 0.0700526], [3, 0.0333333, -0.0700526]], [0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.763974, [3, -0.0333333, 0.0646531], [3, 0.0333333, -0.0646531]], [0.573758, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.412688, [3, -0.0333333, 0.0700526], [3, 0.0333333, -0.0700526]], [0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.763974, [3, -0.0333333, 0.088914], [3, 0.166667, -0.44457]], [-0.638775, [3, -0.166667, 0], [3, 0.466667, 0]], [0.000398923, [3, -0.466667, 0], [3, 0, 0]]])

        self.motion.angleInterpolationBezier(names, times, keys)

    def dance(self):
        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.16, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
        keys.append([-0.476475, 0.338594, -0.476475, 0.338594, -0.476475, 0.338594, -0.476475, 0.338594, 0.0680678, -0.476475, 0.338594, -0.476475, 0.338594, -0.476475, 0.338594, -0.476475, 0.338594, -0.17185])

        names.append("HeadYaw")
        times.append([1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.16, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
        keys.append([-0.745256, 0.0411095, -0.745256, 0.0411095, -0.745256, 0.018508, -0.745256, 0.289725, 0.425684, 0.745256, -0.0411095, 0.745256, -0.0411095, 0.745256, -0.018508, 0.745256, -0.289725, 0.00916195])

        names.append("HipPitch")
        times.append([0.68, 1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
        keys.append([-0.376033, -0.036954, -0.344024, -0.0404086, -0.339835, -0.038321, -0.341769, -0.0367355, -0.34817, -0.035085, -0.341769, -0.0382761, -0.339629, -0.0396041, -0.341605, -0.0362713, -0.343065, -0.0495279])

        names.append("HipRoll")
        times.append([1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
        keys.append([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

        names.append("KneePitch")
        times.append([0.68, 1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
        keys.append([0.166965, -0.00379234, 0.185949, -0.0129339, 0.180821, -0.00320919, 0.187035, -0.00931236, 0.182162, -0.0111253, 0.187035, -0.00683206, 0.184441, -0.0119436, 0.179202, -0.0114876, 0.187691, -0.013167])

        names.append("LElbowRoll")
        times.append([0.68, 1.04, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.12, 8.48, 8.8, 9.2, 9.64, 10.12, 10.6, 11, 11.44, 11.92, 12.36, 12.76, 13.2, 13.68, 14.16, 14.56, 15, 15.6, 16.2, 16.4])
        keys.append([-1.37289, -1.12923, -0.369652, -0.202446, -0.369652, -0.202446, -0.369652, -0.202446, -0.369652, -0.202446, -0.820305, -0.23305, -0.138102, -1.309, -0.257754, -1.4591, -0.138102, -1.309, -0.257754, -1.4591, -0.138102, -1.309, -0.257754, -1.4591, -0.138102, -1.309, -0.257754, -0.984366, -0.513992, -0.424876])

        names.append("LElbowYaw")
        times.append([0.68, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.12, 8.48, 8.8, 9.2, 9.64, 10.12, 10.6, 11, 11.44, 11.92, 12.36, 12.76, 13.2, 13.68, 14.16, 14.56, 15, 15.6, 16.2, 16.4])
        keys.append([-0.65506, -0.380475, -0.618244, -0.380475, -0.618244, -0.380475, -0.618244, -0.380475, -0.618244, 0.410152, 0.818273, 0.851412, 0.0750492, 0.00157596, 0.460767, 0.851412, 0.0750492, 0.00157596, 0.460767, 0.851412, 0.0750492, 0.00157596, 0.460767, 0.851412, 0.0750492, 0.00157596, -1.34565, -1.22484, -1.21037])

        names.append("LHand")
        times.append([0.68, 1.04, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.48, 8.8, 9.2, 9.64, 10.12, 10.6, 11, 11.44, 11.92, 12.36, 12.76, 13.2, 13.68, 14.16, 14.56, 15, 15.6, 16.2, 16.4])
        keys.append([0.2, 0.6, 0.2648, 0.264, 0.2648, 0.264, 0.2648, 0.264, 0.2648, 0.264, 0.663802, 0.928, 0.3, 0.0283999, 0.75, 0.928, 0.3, 0.0283999, 0.75, 0.928, 0.3, 0.0283999, 0.75, 0.928, 0.3, 0.5284, 0.936396, 0.950347, 0.2968])

        names.append("LShoulderPitch")
        times.append([0.68, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.12, 8.48, 8.8, 9.64, 10.6, 11.44, 12.36, 13.2, 14.16, 15, 16.4])
        keys.append([0.97784, 1.29573, 1.40466, 1.29573, 1.40466, 1.29573, 1.40466, 1.29573, 1.40466, 0.172788, -1.04904, -1.19188, 0.995607, -1.19188, 0.995607, -1.19188, 0.995607, -1.19188, 0.995607, 1.47106])

        names.append("LShoulderRoll")
        times.append([0.68, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.48, 8.8, 9.2, 9.64, 10.12, 10.6, 11, 11.44, 11.92, 12.36, 12.76, 13.2, 13.68, 14.16, 14.56, 15, 15.6, 16.2])
        keys.append([0.500047, 0.401871, 0.35585, 0.401871, 0.35585, 0.401871, 0.35585, 0.401871, 0.35585, 0.886453, 0.966481, 1.23332, 0.324005, 1.23332, 0.966481, 1.23332, 0.324005, 1.23332, 0.966481, 1.23332, 0.324005, 1.23332, 0.966481, 1.23332, 0.324005, 0.407503, 0.146991])

        names.append("LWristYaw")
        times.append([0.68, 1.04, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.48, 8.8, 9.64, 10.6, 11.44, 12.36, 13.2, 14.16, 15, 16.2, 16.4])
        keys.append([0.11961, -0.289725, -0.395814, -0.420357, -0.395814, -0.420357, -0.395814, -0.420357, -0.395814, -0.420357, -0.122946, -0.107338, -0.400331, -0.107338, -0.400331, -0.107338, -0.400331, -0.107338, -0.400331, 0.000370312, 0.0827939])

        names.append("RElbowRoll")
        times.append([0.68, 1.08, 1.52, 1.92, 2.36, 2.84, 3.32, 3.72, 4.16, 4.64, 5.08, 5.48, 5.92, 6.4, 6.88, 7.28, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 15.64, 16.24, 16.44])
        keys.append([1.34689, 1.1205, 0.138102, 1.309, 0.257754, 1.4591, 0.138102, 1.309, 0.257754, 1.4591, 0.138102, 1.309, 0.257754, 1.4591, 0.138102, 1.309, 0.257754, 0.372085, 0.369652, 0.202446, 0.369652, 0.202446, 0.369652, 0.202446, 0.369652, 0.202446, 0.82205, 0.519567, 0.429562])

        names.append("RElbowYaw")
        times.append([0.68, 1.08, 1.52, 1.92, 2.36, 2.84, 3.32, 3.72, 4.16, 4.64, 5.08, 5.48, 5.92, 6.4, 6.88, 7.28, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 15.64, 16.24, 16.44])
        keys.append([0.59515, 0.567232, -0.851412, -0.0750492, -0.00157596, -0.460767, -0.851412, -0.0750492, -0.00157596, -0.460767, -0.851412, -0.0750492, -0.00157596, -0.460767, -0.851412, -0.0750492, -0.00157596, 0.352279, 0.380475, 0.618244, 0.380475, 0.618244, 0.380475, 0.618244, 0.380475, 0.618244, 1.26711, 1.23132, 1.21028])

        names.append("RHand")
        times.append([0.68, 1.08, 1.52, 1.92, 2.36, 2.84, 3.32, 3.72, 4.16, 4.64, 5.08, 5.48, 5.92, 6.4, 6.88, 7.28, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24, 16.44])
        keys.append([0.2, 0.95, 0.928, 0.3, 0.0283999, 0.75, 0.928, 0.3, 0.0283999, 0.75, 0.928, 0.3, 0.0283999, 0.75, 0.928, 0.3, 0.5284, 0.271478, 0.2648, 0.264, 0.2648, 0.264, 0.2648, 0.264, 0.2648, 0.264, 0.596785, 0.2976])

        names.append("RShoulderPitch")
        times.append([0.68, 1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
        keys.append([0.915841, -1.19188, 0.995607, -1.19188, 0.995607, -1.19188, 0.995607, -1.19188, 0.995607, 1.281, 1.29573, 1.40466, 1.29573, 1.40466, 1.29573, 1.40466, 1.29573, 1.40466, 1.47268])

        names.append("RShoulderRoll")
        times.append([0.68, 1.08, 1.52, 1.92, 2.36, 2.84, 3.32, 3.72, 4.16, 4.64, 5.08, 5.48, 5.92, 6.4, 6.88, 7.28, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 15.64, 16.44])
        keys.append([-0.905123, -1.30837, -0.966481, -1.23332, -0.324005, -1.23332, -0.966481, -1.23332, -0.324005, -1.23332, -0.966481, -1.23332, -0.324005, -1.23332, -0.966481, -1.23332, -0.324005, -0.397371, -0.401871, -0.35585, -0.401871, -0.35585, -0.401871, -0.35585, -0.401871, -0.35585, -0.310669, -0.174533])

        names.append("RWristYaw")
        times.append([0.68, 1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24, 16.44])
        keys.append([-0.401949, 0.107338, 0.400331, 0.107338, 0.400331, 0.107338, 0.400331, 0.107338, 0.400331, 0.391888, 0.395814, 0.420357, 0.395814, 0.420357, 0.395814, 0.420357, 0.395814, 0.420357, 0.00501826, 0.108872])

        self.motion.angleInterpolationBezier(names, times, keys)
        self.motion.angleInterpolationBezier(names, times, keys)

    def dance_1(self):
        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.162604, [3, -0.16, 0], [3, 0.266667, 0]], [-0.640536, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.333904, [3, -0.253333, 0], [3, 0.2, 0]], [-0.341387, [3, -0.2, 0], [3, 0.2, 0]], [-0.0079806, [3, -0.2, 0], [3, 0, 0]]])

        names.append("HeadYaw")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.00234838, [3, -0.16, 0], [3, 0.266667, 0]], [1.50447, [3, -0.266667, -0.00402978], [3, 0.253333, 0.00382829]], [1.5083, [3, -0.253333, 0], [3, 0.2, 0]], [1.50447, [3, -0.2, 0.00382829], [3, 0.2, -0.00382829]], [0.00234837, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LAnklePitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.0886735, [3, -0.16, 0], [3, 0.266667, 0]], [-0.20944, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.20944, [3, -0.253333, 0], [3, 0.2, 0]], [-0.218846, [3, -0.2, 0.00940618], [3, 0.2, -0.00940618]], [-0.34424, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LAnkleRoll")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.123915, [3, -0.16, 0], [3, 0.266667, 0]], [0.0942478, [3, -0.266667, -0.0447515], [3, 0.253333, 0.042514]], [0.137881, [3, -0.253333, 0], [3, 0.2, 0]], [0.137881, [3, -0.2, 0], [3, 0.2, 0]], [0.00328318, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LElbowRoll")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.413747, [3, -0.16, 0], [3, 0.266667, 0]], [-0.417419, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.395736, [3, -0.253333, 0], [3, 0.2, 0]], [-0.401813, [3, -0.2, 0.00607663], [3, 0.2, -0.00607663]], [-1.0061, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LElbowYaw")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-1.19853, [3, -0.16, 0], [3, 0.266667, 0]], [-1.19333, [3, -0.266667, -0.00310959], [3, 0.253333, 0.00295411]], [-1.18034, [3, -0.253333, 0], [3, 0.2, 0]], [-1.19003, [3, -0.2, 0.0096967], [3, 0.2, -0.0096967]], [-1.38024, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LHand")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.290141, [3, -0.16, 0], [3, 0.266667, 0]], [0.293885, [3, -0.266667, 0], [3, 0.253333, 0]], [0.293885, [3, -0.253333, 0], [3, 0.2, 0]], [0.287666, [3, -0.2, 0.00568669], [3, 0.2, -0.00568669]], [0.259765, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LHipPitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.128245, [3, -0.16, 0], [3, 0.266667, 0]], [-0.0715585, [3, -0.266667, 0.0595139], [3, 0.253333, -0.0565382]], [-0.219911, [3, -0.253333, 0], [3, 0.2, 0]], [-0.219911, [3, -0.2, 0], [3, 0.2, 0]], [-0.444521, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LHipRoll")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.0996971, [3, -0.16, 0], [3, 0.266667, 0]], [0.00964819, [3, -0.266667, 0], [3, 0.253333, 0]], [0.544543, [3, -0.253333, 0], [3, 0.2, 0]], [0.544543, [3, -0.2, 0], [3, 0.2, 0]], [0.000849991, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LHipYawPitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.162195, [3, -0.16, 0], [3, 0.266667, 0]], [0.730519, [3, -0.266667, 0], [3, 0.253333, 0]], [0.616101, [3, -0.253333, 0], [3, 0.2, 0]], [0.616101, [3, -0.2, 0], [3, 0.2, 0]], [0.000961689, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LKneePitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.0876097, [3, -0.16, 0], [3, 0.266667, 0]], [-0.0800728, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.0925025, [3, -0.253333, 0], [3, 0.2, 0]], [-0.0923279, [3, -0.2, -0.000174537], [3, 0.2, 0.000174537]], [0.69245, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LShoulderPitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[1.47234, [3, -0.16, 0], [3, 0.266667, 0]], [-1.42593, [3, -0.266667, 0], [3, 0.253333, 0]], [-1.42359, [3, -0.253333, -0.00175763], [3, 0.2, 0.0013876]], [-1.4165, [3, -0.2, -0.00708867], [3, 0.2, 0.00708867]], [1.39208, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LShoulderRoll")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.184089, [3, -0.16, 0], [3, 0.266667, 0]], [0.193173, [3, -0.266667, 0], [3, 0.253333, 0]], [0.123687, [3, -0.253333, 0], [3, 0.2, 0]], [0.126847, [3, -0.2, -0.00316082], [3, 0.2, 0.00316082]], [0.297493, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LWristYaw")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.0968379, [3, -0.16, 0], [3, 0.266667, 0]], [0.0985198, [3, -0.266667, 0], [3, 0.253333, 0]], [0.0985198, [3, -0.253333, 0], [3, 0.2, 0]], [0.0901013, [3, -0.2, 0.00841853], [3, 0.2, -0.00841853]], [0.00130432, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RAnklePitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.0886619, [3, -0.16, 0], [3, 0.266667, 0]], [0.9227, [3, -0.266667, 0], [3, 0.253333, 0]], [0.9227, [3, -0.253333, 0], [3, 0.2, 0]], [0.9227, [3, -0.2, 3.32895e-07], [3, 0.2, -3.32895e-07]], [-0.348013, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RAnkleRoll")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.124065, [3, -0.16, 0], [3, 0.266667, 0]], [7.45058e-09, [3, -0.266667, 0], [3, 0.253333, 0]], [7.45058e-09, [3, -0.253333, 0], [3, 0.2, 0]], [7.45058e-09, [3, -0.2, 0], [3, 0.2, 0]], [7.45058e-09, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RElbowRoll")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.413748, [3, -0.16, 0], [3, 0.266667, 0]], [0.406807, [3, -0.266667, 0.0032207], [3, 0.253333, -0.00305966]], [0.394907, [3, -0.253333, 0.000657421], [3, 0.2, -0.000519017]], [0.394388, [3, -0.2, 0], [3, 0.2, 0]], [1.00605, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RElbowYaw")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[1.19862, [3, -0.16, 0], [3, 0.266667, 0]], [1.19332, [3, -0.266667, 0.00257455], [3, 0.253333, -0.00244582]], [1.18356, [3, -0.253333, 0], [3, 0.2, 0]], [1.18432, [3, -0.2, -0.000757803], [3, 0.2, 0.000757803]], [1.38702, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RHand")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.290139, [3, -0.16, 0], [3, 0.266667, 0]], [0.293853, [3, -0.266667, 0], [3, 0.253333, 0]], [0.293853, [3, -0.253333, 0], [3, 0.2, 0]], [0.287639, [3, -0.2, 0.00568239], [3, 0.2, -0.00568239]], [0.259758, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RHipPitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.128255, [3, -0.16, 0], [3, 0.266667, 0]], [0.483456, [3, -0.266667, 0], [3, 0.253333, 0]], [0.483456, [3, -0.253333, 0], [3, 0.2, 0]], [0.483456, [3, -0.2, 0], [3, 0.2, 0]], [-0.441105, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RHipRoll")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.0997211, [3, -0.16, 0], [3, 0.266667, 0]], [-0.0934616, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.0934616, [3, -0.253333, 0], [3, 0.2, 0]], [-0.0872071, [3, -0.2, -0.00625446], [3, 0.2, 0.00625446]], [-0.00868798, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RHipYawPitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.162195, [3, -0.16, 0], [3, 0.266667, 0]], [0.730519, [3, -0.266667, 0], [3, 0.253333, 0]], [0.730519, [3, -0.253333, 0], [3, 0.2, 0]], [0.616101, [3, -0.2, 0.114418], [3, 0.2, -0.114418]], [0.000961689, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RKneePitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.0876097, [3, -0.16, 0], [3, 0.266667, 0]], [-0.0904766, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.0904766, [3, -0.253333, 0], [3, 0.2, 0]], [-0.0904766, [3, -0.2, 0], [3, 0.2, 0]], [0.692467, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RShoulderPitch")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[1.46238, [3, -0.16, 0], [3, 0.266667, 0]], [-1.06465, [3, -0.266667, 0], [3, 0.253333, 0]], [-1.05667, [3, -0.253333, -0.00266687], [3, 0.2, 0.00210542]], [-1.05033, [3, -0.2, -0.00633812], [3, 0.2, 0.00633812]], [1.39697, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RShoulderRoll")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[-0.183688, [3, -0.16, 0], [3, 0.266667, 0]], [-0.193036, [3, -0.266667, 0], [3, 0.253333, 0]], [-0.133844, [3, -0.253333, 0], [3, 0.2, 0]], [-0.154231, [3, -0.2, 0.0203866], [3, 0.2, -0.0203866]], [-0.292888, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RWristYaw")
        times.append([0.48, 1.28, 2.04, 2.64, 3.24])
        keys.append([[0.0968379, [3, -0.16, 0], [3, 0.266667, 0]], [0.0986067, [3, -0.266667, 0], [3, 0.253333, 0]], [0.0986067, [3, -0.253333, 0], [3, 0.2, 0]], [0.0901808, [3, -0.2, 0.00842592], [3, 0.2, -0.00842592]], [0.00130547, [3, -0.2, 0], [3, 0, 0]]])

        self.motion.angleInterpolationBezier(names, times, keys)