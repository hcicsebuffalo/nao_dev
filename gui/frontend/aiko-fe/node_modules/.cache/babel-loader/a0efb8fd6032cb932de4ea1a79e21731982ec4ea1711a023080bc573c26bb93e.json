{"ast":null,"code":"var _jsxFileName = \"/home/hri/dev/gui/frontend/aiko-fe/src/routes/routes.js\";\nimport React, { useEffect, createContext, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SettingsContext = /*#__PURE__*/createContext();\nexport function Routing() {\n  //routes for the project\n\n  // const [settings, setSettings] = useState();\n  // useEffect(() => {\n  //     axios.post(\"https://localhost:5000/settingsAPI\").then((res) => {\n  //         console.log(res.data);\n  //         setSettings(res.data);\n  //     });\n  // }, []);\n\n  // const testSettings = (settingsChange, value) => {\n  //     var settingsTemp = settings;\n  //     switch (settingsChange) {\n  //         case \"Frame Threshold\":\n  //             settingsTemp[\"Frame Threshold\"] = parseInt(value);\n  //             break;\n  //         case \"Detection Sensitivity\":\n  //             settingsTemp[\"Detection Sensitivity\"] = parseFloat(value);\n  //             break;\n  //         // case \"LoginLogoutTime\":\n  //         //     settingsTemp.Login.hours = parseInt(value.login.hours);\n  //         //     settingsTemp.Login.minutes = parseInt(value.login.minutes);\n  //         //     settingsTemp.Logout.hours = parseInt(value.logout.hours);\n  //         //     settingsTemp.Logout.minutes = parseInt(value.logout.minutes);\n  //         //     break;\n  //         default:\n  //             console.log(\"which settings called on default: \", settingsChange);\n  //             break;\n  //     }\n  //     setSettings(settingsTemp);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: [settings, testSettings],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: landing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/newvisitor/checkin\",\n          component: Newvisitorcheckin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_c = Routing;\nvar _c;\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"names":["React","useEffect","createContext","useState","Switch","Route","jsxDEV","_jsxDEV","SettingsContext","Routing","Provider","value","settings","testSettings","children","path","exact","component","landing","fileName","_jsxFileName","lineNumber","columnNumber","Newvisitorcheckin","_c","$RefreshReg$"],"sources":["/home/hri/dev/gui/frontend/aiko-fe/src/routes/routes.js"],"sourcesContent":["import React, { useEffect, createContext, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nexport const SettingsContext = createContext();\n\nexport function Routing() {                                                                      //routes for the project\n\n    // const [settings, setSettings] = useState();\n    // useEffect(() => {\n    //     axios.post(\"https://localhost:5000/settingsAPI\").then((res) => {\n    //         console.log(res.data);\n    //         setSettings(res.data);\n    //     });\n    // }, []);\n\n    // const testSettings = (settingsChange, value) => {\n    //     var settingsTemp = settings;\n    //     switch (settingsChange) {\n    //         case \"Frame Threshold\":\n    //             settingsTemp[\"Frame Threshold\"] = parseInt(value);\n    //             break;\n    //         case \"Detection Sensitivity\":\n    //             settingsTemp[\"Detection Sensitivity\"] = parseFloat(value);\n    //             break;\n    //         // case \"LoginLogoutTime\":\n    //         //     settingsTemp.Login.hours = parseInt(value.login.hours);\n    //         //     settingsTemp.Login.minutes = parseInt(value.login.minutes);\n    //         //     settingsTemp.Logout.hours = parseInt(value.logout.hours);\n    //         //     settingsTemp.Logout.minutes = parseInt(value.logout.minutes);\n    //         //     break;\n    //         default:\n    //             console.log(\"which settings called on default: \", settingsChange);\n    //             break;\n    //     }\n    //     setSettings(settingsTemp);\n    // };\n\n\n\n\n\n\n\n\n    return (\n        <SettingsContext.Provider value={[settings, testSettings]}>\n            <div>\n                <Switch>\n                    <Route path=\"/\" exact component={landing} />\n                    <Route path=\"/newvisitor/checkin\" component={Newvisitorcheckin} />\n                </Switch>\n            </div>\n        </SettingsContext.Provider>\n\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,eAAe,gBAAGN,aAAa,EAAE;AAE9C,OAAO,SAASO,OAAOA,CAAA,EAAG;EAAuE;;EAE7F;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EASA,oBACIF,OAAA,CAACC,eAAe,CAACE,QAAQ;IAACC,KAAK,EAAE,CAACC,QAAQ,EAAEC,YAAY,CAAE;IAAAC,QAAA,eACtDP,OAAA;MAAAO,QAAA,eACIP,OAAA,CAACH,MAAM;QAAAU,QAAA,gBACHP,OAAA,CAACF,KAAK;UAACU,IAAI,EAAC,GAAG;UAACC,KAAK;UAACC,SAAS,EAAEC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC5Cf,OAAA,CAACF,KAAK;UAACU,IAAI,EAAC,qBAAqB;UAACE,SAAS,EAAEM;QAAkB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC7D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACiB;AAGnC;AAACE,EAAA,GAlDef,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}